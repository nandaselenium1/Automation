# Define the root logger with appender file
log4j.rootLogger = INFO, FILE,stdout
#The above line means, i want to log 'INFO' log and I want to write the information in the FILE and in the console(stdout)

# Define the file appender
log4j.appender.FILE=org.apache.log4j.FileAppender
#This class 'FileAppender' we use when we need to write the log into Log File
log4j.appender.FILE.File=automation.out
#'automation.out' is my File name, this file i want to write the log
log4j.appender.FILE.Append=true
# The above line means, i want to append my logs, i don't want to create fresh logs 
#If i keep this property as 'false', then always a fresh log will be created)and old log will be erased
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#The above 2 properties represents the pattern of log (What pattern i should follow)
log4j.appender.file.MaxFileSize=4MB
log4j.appender.file.MaxBackupIndex=9
#latest 9 files of size 4MB will be maintained in backup

# Define the layout for file appender
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.conversionPattern=%m%n

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#This 'ConsoleAppender' class will write the logs on your console.
log4j.appender.stdout.Target=System.out
#System.out means console
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n